version: 3
silent: true
output: prefixed
run: when_changed
tasks:
  default:
    deps:
      - dev
      - prod
    cmd: echo Done!
  generator:resources:
    cmds:
      - echo Exporting Resources from {{.SRC_DIR}}...
      - mkdir -p {{.OUT_DIR}}
      - |-
        cat << EOF > {{.OUT_DIR}}/{{.GENERATOR.output}}
        {{- range $_, $kind := .GENERATOR.resources}}
        {{- range $_, $resource := $kind}}
        ---
        {{toYaml $resource}}
        {{- end}}
        {{- end}}
        EOF
    requires:
      vars:
        - GENERATOR
        - SRC_DIR
        - OUT_DIR
    sources:
      - '{{.SRC_DIR}}/*'
    generates:
      - '{{.OUT_FILE}}/{{.GENERATOR.output}}'
  generator:helm:
    prefix: generator:helm:{{.GENERATOR.helm.chart.release}}
    cmds:
      - echo Rendering Chart {{.GENERATOR.helm.chart.release}} from {{.SRC_DIR}}...
      - mkdir -p {{.OUT_DIR}}
      - |-
        cat << EOF > {{.OUT_DIR}}/helm.{{.GENERATOR.helm.chart.release}}.values.yaml

        {{toYaml .GENERATOR.helm.values}}

        EOF
      - |-
        helm template {{.GENERATOR.helm.chart.release}} \
        	./.cuebe/helm-cache/{{.GENERATOR.helm.chart.repository.name}}/{{.GENERATOR.helm.chart.name}}/{{.GENERATOR.helm.chart.version}}/{{.GENERATOR.helm.chart.name}} \
        	--values {{.OUT_DIR}}/helm.{{.GENERATOR.helm.chart.release}}.values.yaml \
        	--include-crds \
        	{{if .GENERATOR.helm.namespace}}--namespace {{.GENERATOR.helm.namespace}}{{end}} \
        	{{if .GENERATOR.helm.apiVersions}}--api-versions '{{.GENERATOR.helm.apiVersions | join ","}}'{{end}} \
        	--atomic \
        	{{if not .GENERATOR.helm.enableHooks}}--no-hooks{{end}} \
        	> {{.OUT_DIR}}/{{.GENERATOR.output}}
    requires:
      vars:
        - GENERATOR
        - SRC_DIR
        - OUT_DIR
    sources:
      - '{{.SRC_DIR}}/*'
    generates:
      - '{{.OUT_FILE}}/{{.GENERATOR.output}}'
  component:dev:metrics-server:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: metrics-server
                  version: 3.13.0
                  release: metrics-server
                  repository:
                    name: metrics-server
                    url: https://kubernetes-sigs.github.io/metrics-server/
                values:
                  args:
                    - --kubelet-insecure-tls
                enableHooks: false
          SRC_DIR: components/metrics-server
          OUT_DIR: .cuebe/dev/components/metrics-server
  component:dev:metrics-server:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/metrics-server/metrics-server.gen.yaml` }}'
    deps:
      - component:dev:metrics-server:transformer-0
    sources:
      - components/metrics-server/*.cue
      - .cuebe/dev/components/metrics-server/metrics-server.gen.yaml
  helm-pull:metrics-server:metrics-server:3.13.0:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/metrics-server/metrics-server/3.13.0
      - |-
        cat << EOF > .cuebe/helm-cache/metrics-server/metrics-server/3.13.0/pull.sh
        #!/usr/bin/env bash
        helm pull metrics-server \
        	--repo https://kubernetes-sigs.github.io/metrics-server/ \
        	--version 3.13.0 \
        	--destination .cuebe/helm-cache/metrics-server/metrics-server/3.13.0 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/metrics-server/metrics-server/3.13.0/pull.sh
      - .cuebe/helm-cache/metrics-server/metrics-server/3.13.0/pull.sh
    sources:
      - .cuebe/helm-cache/metrics-server/metrics-server/3.13.0/pull.sh
    generates:
      - .cuebe/helm-cache/metrics-server/metrics-server/3.13.0/metrics-server/Chart.yaml
  helm-pull:coredns:coredns:1.43.1:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/coredns/coredns/1.43.1
      - |-
        cat << EOF > .cuebe/helm-cache/coredns/coredns/1.43.1/pull.sh
        #!/usr/bin/env bash
        helm pull coredns \
        	--repo https://coredns.github.io/helm \
        	--version 1.43.1 \
        	--destination .cuebe/helm-cache/coredns/coredns/1.43.1 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/coredns/coredns/1.43.1/pull.sh
      - .cuebe/helm-cache/coredns/coredns/1.43.1/pull.sh
    sources:
      - .cuebe/helm-cache/coredns/coredns/1.43.1/pull.sh
    generates:
      - .cuebe/helm-cache/coredns/coredns/1.43.1/coredns/Chart.yaml
  helm-pull:traefik:traefik:37.0.0:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/traefik/traefik/37.0.0
      - |-
        cat << EOF > .cuebe/helm-cache/traefik/traefik/37.0.0/pull.sh
        #!/usr/bin/env bash
        helm pull traefik \
        	--repo https://traefik.github.io/charts \
        	--version 37.0.0 \
        	--destination .cuebe/helm-cache/traefik/traefik/37.0.0 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/traefik/traefik/37.0.0/pull.sh
      - .cuebe/helm-cache/traefik/traefik/37.0.0/pull.sh
    sources:
      - .cuebe/helm-cache/traefik/traefik/37.0.0/pull.sh
    generates:
      - .cuebe/helm-cache/traefik/traefik/37.0.0/traefik/Chart.yaml
  helm-pull:cert-manager:cert-manager:v1.18.2:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2
      - |-
        cat << EOF > .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/pull.sh
        #!/usr/bin/env bash
        helm pull cert-manager \
        	--repo https://charts.jetstack.io \
        	--version v1.18.2 \
        	--destination .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/pull.sh
      - .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/pull.sh
    sources:
      - .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/pull.sh
    generates:
      - .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/cert-manager/Chart.yaml
  helm-pull:metallb:metallb:0.15.2:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/metallb/metallb/0.15.2
      - |-
        cat << EOF > .cuebe/helm-cache/metallb/metallb/0.15.2/pull.sh
        #!/usr/bin/env bash
        helm pull metallb \
        	--repo https://metallb.github.io/metallb \
        	--version 0.15.2 \
        	--destination .cuebe/helm-cache/metallb/metallb/0.15.2 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/metallb/metallb/0.15.2/pull.sh
      - .cuebe/helm-cache/metallb/metallb/0.15.2/pull.sh
    sources:
      - .cuebe/helm-cache/metallb/metallb/0.15.2/pull.sh
    generates:
      - .cuebe/helm-cache/metallb/metallb/0.15.2/metallb/Chart.yaml
  helm-pull:kube-prometheus-stack:kube-prometheus-stack:75.18.1:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/kube-prometheus-stack/kube-prometheus-stack/75.18.1
      - |-
        cat << EOF > .cuebe/helm-cache/kube-prometheus-stack/kube-prometheus-stack/75.18.1/pull.sh
        #!/usr/bin/env bash
        helm pull kube-prometheus-stack \
        	--repo https://prometheus-community.github.io/helm-charts \
        	--version 75.18.1 \
        	--destination .cuebe/helm-cache/kube-prometheus-stack/kube-prometheus-stack/75.18.1 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/kube-prometheus-stack/kube-prometheus-stack/75.18.1/pull.sh
      - .cuebe/helm-cache/kube-prometheus-stack/kube-prometheus-stack/75.18.1/pull.sh
    sources:
      - .cuebe/helm-cache/kube-prometheus-stack/kube-prometheus-stack/75.18.1/pull.sh
    generates:
      - .cuebe/helm-cache/kube-prometheus-stack/kube-prometheus-stack/75.18.1/kube-prometheus-stack/Chart.yaml
  helm-pull:cloudnative-pg:cloudnative-pg:0.25.0:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0
      - |-
        cat << EOF > .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/pull.sh
        #!/usr/bin/env bash
        helm pull cloudnative-pg \
        	--repo https://cloudnative-pg.github.io/charts \
        	--version 0.25.0 \
        	--destination .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/pull.sh
      - .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/pull.sh
    sources:
      - .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/pull.sh
    generates:
      - .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/cloudnative-pg/Chart.yaml
  helm-pull:headlamp:headlamp:0.34.0:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/headlamp/headlamp/0.34.0
      - |-
        cat << EOF > .cuebe/helm-cache/headlamp/headlamp/0.34.0/pull.sh
        #!/usr/bin/env bash
        helm pull headlamp \
        	--repo https://kubernetes-sigs.github.io/headlamp \
        	--version 0.34.0 \
        	--destination .cuebe/helm-cache/headlamp/headlamp/0.34.0 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/headlamp/headlamp/0.34.0/pull.sh
      - .cuebe/helm-cache/headlamp/headlamp/0.34.0/pull.sh
    sources:
      - .cuebe/helm-cache/headlamp/headlamp/0.34.0/pull.sh
    generates:
      - .cuebe/helm-cache/headlamp/headlamp/0.34.0/headlamp/Chart.yaml
  component:dev:metrics-server:
    deps:
      - component:dev:metrics-server:transformer-0
      - component:dev:metrics-server:validator-0
      - component:dev:metrics-server:validator-1
  component:dev:dns:
    deps:
      - component:dev:dns:transformer-0
      - component:dev:dns:validator-0
      - component:dev:dns:validator-1
  component:dev:gateway:
    deps:
      - component:dev:gateway:transformer-0
      - component:dev:gateway:validator-0
      - component:dev:gateway:validator-1
  component:dev:cert-manager:
    deps:
      - component:dev:cert-manager:transformer-0
      - component:dev:cert-manager:validator-0
      - component:dev:cert-manager:validator-1
  component:dev:load-balancer:
    deps:
      - component:dev:load-balancer:transformer-0
      - component:dev:load-balancer:validator-0
      - component:dev:load-balancer:validator-1
  component:dev:metrics:
    deps:
      - component:dev:metrics:transformer-0
      - component:dev:metrics:validator-0
      - component:dev:metrics:validator-1
  component:dev:postgres:
    deps:
      - component:dev:postgres:transformer-0
      - component:dev:postgres:validator-0
      - component:dev:postgres:validator-1
  component:dev:headlamp:
    deps:
      - component:dev:headlamp:transformer-0
      - component:dev:headlamp:validator-0
      - component:dev:headlamp:validator-1
  component:prod:metrics-server:
    deps:
      - component:prod:metrics-server:transformer-0
      - component:prod:metrics-server:validator-0
      - component:prod:metrics-server:validator-1
  component:prod:dns:
    deps:
      - component:prod:dns:transformer-0
      - component:prod:dns:validator-0
      - component:prod:dns:validator-1
  component:prod:gateway:
    deps:
      - component:prod:gateway:transformer-0
      - component:prod:gateway:validator-0
      - component:prod:gateway:validator-1
  component:prod:cert-manager:
    deps:
      - component:prod:cert-manager:transformer-0
      - component:prod:cert-manager:validator-0
      - component:prod:cert-manager:validator-1
  component:prod:load-balancer:
    deps:
      - component:prod:load-balancer:transformer-0
      - component:prod:load-balancer:validator-0
      - component:prod:load-balancer:validator-1
  component:prod:metrics:
    deps:
      - component:prod:metrics:transformer-0
      - component:prod:metrics:validator-0
      - component:prod:metrics:validator-1
  component:prod:postgres:
    deps:
      - component:prod:postgres:transformer-0
      - component:prod:postgres:validator-0
      - component:prod:postgres:validator-1
  component:prod:headlamp:
    deps:
      - component:prod:headlamp:transformer-0
      - component:prod:headlamp:validator-0
      - component:prod:headlamp:validator-1
  component:dev:metrics-server:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources: {}
          SRC_DIR: components/metrics-server
          OUT_DIR: .cuebe/dev/components/metrics-server
  component:dev:dns:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: coredns
                  version: 1.43.1
                  release: coredns
                  repository:
                    name: coredns
                    url: https://coredns.github.io/helm
                values:
                  isClusterService: false
                  image:
                    repository: ghcr.io/k8s-gateway/k8s_gateway
                    tag: 1.5.1
                    pullPolicy: IfNotPresent
                  serviceAccount:
                    create: true
                  serviceType: LoadBalancer
                  service:
                    loadBalancerIP: 10.0.1.2
                  servers:
                    - zones:
                        - zone: ballard.localhost
                      port: 53
                      plugins:
                        - name: cache
                        - name: log
                          parameters: . "{combined}"
                          configBlock: class denial error
                        - name: forward
                          parameters: . 10.0.1.1
                    - zones:
                        - zone: mission.localhost
                      port: 53
                      plugins:
                        - name: cache
                        - name: log
                          parameters: . "{combined}"
                          configBlock: class denial error
                        - name: forward
                          parameters: . 10.1.1.1
                    - zones:
                        - zone: localhost
                      port: 53
                      plugins:
                        - name: cache
                        - name: log
                          parameters: . "{combined}"
                          configBlock: class denial error
                        - name: k8s_gateway
                          configBlock: resources HTTPRoute
                    - port: 53
                      plugins:
                        - name: cache
                        - name: log
                          parameters: . "{combined}"
                          configBlock: class denial error
                        - name: any
                        - name: errors
                        - name: health
                        - name: ready
                        - name: prometheus
                          parameters: "0.0.0.0:9153"
                        - name: reload
                          parameters: 30s 5s
                        - name: forward
                          parameters: . tls://1.1.1.1 tls://1.0.0.1
                          configBlock: |-
                            tls
                            tls_servername one.one.one.one
                enableHooks: false
                namespace: dns
          SRC_DIR: components/dns
          OUT_DIR: .cuebe/dev/components/dns
  component:dev:metrics-server:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/metrics-server/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: kube-system
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/metrics-server > .cuebe/dev/components/metrics-server/metrics-server.gen.yaml
    deps:
      - task: component:dev:metrics-server:generator-0
      - task: component:dev:metrics-server:generator-1
    generates:
      - .cuebe/dev/components/metrics-server/kustomization.yaml
      - .cuebe/dev/components/metrics-server/metrics-server.gen.yaml
    sources:
      - components/metrics-server/*.cue
      - .cuebe/dev/components/metrics-server/helm.gen.yaml
      - .cuebe/dev/components/metrics-server/resources.gen.yaml
  component:dev:metrics-server:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/metrics-server/metrics-server.gen.yaml` }}'
    deps:
      - component:dev:metrics-server:transformer-0
    sources:
      - components/metrics-server/*.cue
      - .cuebe/dev/components/metrics-server/metrics-server.gen.yaml
  component:dev:dns:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/dns/dns.gen.yaml` }}'
    deps:
      - component:dev:dns:transformer-0
    sources:
      - components/dns/*.cue
      - .cuebe/dev/components/dns/dns.gen.yaml
  component:dev:dns:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                ClusterRole:
                  gateway:
                    apiVersion: rbac.authorization.k8s.io/v1
                    kind: ClusterRole
                    metadata:
                      name: gateway
                    rules:
                      - apiGroups:
                          - ""
                        resources:
                          - endpoints
                          - services
                          - pods
                          - namespaces
                        verbs:
                          - list
                          - watch
                      - apiGroups:
                          - apiextensions.k8s.io
                        resources:
                          - customresourcedefinitions
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - gateway.networking.k8s.io
                        resources:
                          - gateways
                          - gatewayclasses
                          - httproutes
                          - tlsroutes
                          - grpcroutes
                        verbs:
                          - watch
                          - list
                      - apiGroups:
                          - externaldns.k8s.io
                        resources:
                          - dnsendpoints
                        verbs:
                          - watch
                          - list
                ClusterRoleBinding:
                  gateway:
                    apiVersion: rbac.authorization.k8s.io/v1
                    kind: ClusterRoleBinding
                    metadata:
                      name: gateway
                    roleRef:
                      apiGroup: rbac.authorization.k8s.io
                      kind: ClusterRole
                      name: gateway
                    subjects:
                      - kind: ServiceAccount
                        name: coredns
                        namespace: dns
                Namespace:
                  dns:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: dns
          SRC_DIR: components/dns
          OUT_DIR: .cuebe/dev/components/dns
  component:dev:gateway:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: traefik
                  version: 37.0.0
                  release: traefik
                  repository:
                    name: traefik
                    url: https://traefik.github.io/charts
                values:
                  providers:
                    kubernetesIngress:
                      enabled: false
                    kubernetesCRD:
                      enabled: false
                    kubernetesGateway:
                      enabled: true
                      statusAddress:
                        service:
                          enabled: true
                  service:
                    annotations:
                      metallb.io/loadBalancerIPs: 10.0.1.3
                      tilt.dev/port-forward: "8080:80"
                  ports:
                    web:
                      redirections:
                        entryPoint:
                          to: websecure
                          scheme: https
                    websecure:
                      asDefault: true
                  gateway:
                    listeners:
                      web:
                        namespacePolicy:
                          from: All
                      websecure:
                        port: 8443
                        protocol: HTTPS
                        namespacePolicy:
                          from: All
                        certificateRefs:
                          - name: gw-tls-self-signed
                  metrics:
                    prometheus:
                      serviceMonitor:
                        enabled: true
                enableHooks: false
                namespace: gateway
                apiVersions:
                  - monitoring.coreos.com/v1
          SRC_DIR: components/gateway
          OUT_DIR: .cuebe/dev/components/gateway
  component:dev:dns:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/dns/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/dns > .cuebe/dev/components/dns/dns.gen.yaml
    deps:
      - task: component:dev:dns:generator-0
      - task: component:dev:dns:generator-1
    generates:
      - .cuebe/dev/components/dns/kustomization.yaml
      - .cuebe/dev/components/dns/dns.gen.yaml
    sources:
      - components/dns/*.cue
      - .cuebe/dev/components/dns/helm.gen.yaml
      - .cuebe/dev/components/dns/resources.gen.yaml
  component:dev:dns:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/dns/dns.gen.yaml` }}'
    deps:
      - component:dev:dns:transformer-0
    sources:
      - components/dns/*.cue
      - .cuebe/dev/components/dns/dns.gen.yaml
  component:dev:gateway:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/gateway/gateway.gen.yaml` }}'
    deps:
      - component:dev:gateway:transformer-0
    sources:
      - components/gateway/*.cue
      - .cuebe/dev/components/gateway/gateway.gen.yaml
  component:dev:gateway:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                Certificate:
                  default:
                    apiVersion: cert-manager.io/v1
                    kind: Certificate
                    metadata:
                      name: default
                      namespace: gateway
                    spec:
                      dnsNames:
                        - localhost
                        - '*.localhost'
                        - '*.services.localhost'
                      issuerRef:
                        kind: Issuer
                        name: self-signed
                      secretName: gw-tls-self-signed
                HTTPRoute:
                  traefik:
                    apiVersion: gateway.networking.k8s.io/v1
                    kind: HTTPRoute
                    metadata:
                      name: traefik
                      namespace: gateway
                    spec:
                      hostnames:
                        - traefik.localhost
                      parentRefs:
                        - kind: Gateway
                          name: traefik-gateway
                      rules:
                        - backendRefs:
                            - kind: TraefikService
                              name: api@internal
                Namespace:
                  gateway:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: gateway
          SRC_DIR: components/gateway
          OUT_DIR: .cuebe/dev/components/gateway
  dev:
    deps:
      - component:dev:metrics-server
      - component:dev:dns
      - component:dev:gateway
      - component:dev:cert-manager
      - component:dev:load-balancer
      - component:dev:metrics
      - component:dev:postgres
      - component:dev:headlamp
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - components/metrics-server/metrics-server.gen.yaml
          - components/dns/dns.gen.yaml
          - components/gateway/gateway.gen.yaml
          - components/cert-manager/cert-manager.gen.yaml
          - components/load-balancer/load-balancer.gen.yaml
          - components/metrics/metrics.gen.yaml
          - components/postgres/postgres.gen.yaml
          - components/headlamp/headlamp.gen.yaml

        EOF
      - kustomize build .cuebe/dev > .cuebe/dev/kustomized.yaml
  component:dev:gateway:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/gateway/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/gateway > .cuebe/dev/components/gateway/gateway.gen.yaml
    deps:
      - task: component:dev:gateway:generator-0
      - task: component:dev:gateway:generator-1
    generates:
      - .cuebe/dev/components/gateway/kustomization.yaml
      - .cuebe/dev/components/gateway/gateway.gen.yaml
    sources:
      - components/gateway/*.cue
      - .cuebe/dev/components/gateway/helm.gen.yaml
      - .cuebe/dev/components/gateway/resources.gen.yaml
  component:dev:gateway:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/gateway/gateway.gen.yaml` }}'
    deps:
      - component:dev:gateway:transformer-0
    sources:
      - components/gateway/*.cue
      - .cuebe/dev/components/gateway/gateway.gen.yaml
  component:dev:cert-manager:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/cert-manager/cert-manager.gen.yaml` }}'
    deps:
      - component:dev:cert-manager:transformer-0
    sources:
      - components/cert-manager/*.cue
      - .cuebe/dev/components/cert-manager/cert-manager.gen.yaml
  component:dev:cert-manager:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: cert-manager
                  version: v1.18.2
                  release: cert-manager
                  repository:
                    name: cert-manager
                    url: https://charts.jetstack.io
                values:
                  crds:
                    enabled: true
                  global:
                    leaderElection:
                      namespace: gateway
                  config:
                    featureGates:
                      ServerSideApply: true
                  prometheus:
                    servicemonitor:
                      enabled: true
                    podmonitor:
                      enabled: false
                enableHooks: false
                namespace: gateway
          SRC_DIR: components/cert-manager
          OUT_DIR: .cuebe/dev/components/cert-manager
  component:dev:cert-manager:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                Issuer:
                  self-signed:
                    apiVersion: cert-manager.io/v1
                    kind: Issuer
                    metadata:
                      name: self-signed
                      namespace: gateway
                    spec:
                      selfSigned: {}
                  acme-staging:
                    apiVersion: cert-manager.io/v1
                    kind: Issuer
                    metadata:
                      name: acme-staging
                      namespace: gateway
                    spec:
                      acme:
                        privateKeySecretRef:
                          name: acme-staging-account-key
                        server: https://acme-staging-v02.api.letsencrypt.org/directory
                        solvers:
                          - dns01:
                              cloudflare:
                                apiTokenSecretRef:
                                  key: api-token
                                  name: cloudflare-api-token
                  acme-prod:
                    apiVersion: cert-manager.io/v1
                    kind: Issuer
                    metadata:
                      name: acme-prod
                      namespace: gateway
                    spec:
                      acme:
                        privateKeySecretRef:
                          name: acme-prod-account-key
                        server: https://acme-v02.api.letsencrypt.org/directory
                        solvers:
                          - dns01:
                              cloudflare:
                                apiTokenSecretRef:
                                  key: api-token
                                  name: cloudflare-api-token
          SRC_DIR: components/cert-manager
          OUT_DIR: .cuebe/dev/components/cert-manager
  component:dev:cert-manager:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/cert-manager/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/cert-manager > .cuebe/dev/components/cert-manager/cert-manager.gen.yaml
    deps:
      - task: component:dev:cert-manager:generator-0
      - task: component:dev:cert-manager:generator-1
    generates:
      - .cuebe/dev/components/cert-manager/kustomization.yaml
      - .cuebe/dev/components/cert-manager/cert-manager.gen.yaml
    sources:
      - components/cert-manager/*.cue
      - .cuebe/dev/components/cert-manager/helm.gen.yaml
      - .cuebe/dev/components/cert-manager/resources.gen.yaml
  component:dev:cert-manager:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/cert-manager/cert-manager.gen.yaml` }}'
    deps:
      - component:dev:cert-manager:transformer-0
    sources:
      - components/cert-manager/*.cue
      - .cuebe/dev/components/cert-manager/cert-manager.gen.yaml
  component:dev:load-balancer:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/load-balancer/load-balancer.gen.yaml` }}'
    deps:
      - component:dev:load-balancer:transformer-0
    sources:
      - components/load-balancer/*.cue
      - .cuebe/dev/components/load-balancer/load-balancer.gen.yaml
  component:dev:load-balancer:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: metallb
                  release: metallb
                  version: 0.15.2
                  repository:
                    name: metallb
                    url: https://metallb.github.io/metallb
                values:
                  speaker:
                    frr:
                      enabled: false
                  prometheus:
                    serviceAccount: prometheus-kube-prometheus-prometheus
                    namespace: metrics
                    serviceMonitor:
                      enabled: true
                enableHooks: false
                namespace: load-balancer
          SRC_DIR: components/load-balancer
          OUT_DIR: .cuebe/dev/components/load-balancer
  component:dev:load-balancer:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                Namespace:
                  load_balancer:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      labels:
                        pod-security.kubernetes.io/enforce: privileged
                        pod-security.kubernetes.io/audit: privileged
                        pod-security.kubernetes.io/warn: privileged
                      name: load-balancer
                IPAddressPool:
                  default:
                    apiVersion: metallb.io/v1beta1
                    kind: IPAddressPool
                    metadata:
                      name: default
                      namespace: load-balancer
                    spec:
                      avoidBuggyIPs: true
                      addresses:
                        - 10.0.1.0/29
                L2Advertisement:
                  default:
                    apiVersion: metallb.io/v1beta1
                    kind: L2Advertisement
                    metadata:
                      name: default
                      namespace: load-balancer
                    spec:
                      ipAddressPools:
                        - default
          SRC_DIR: components/load-balancer
          OUT_DIR: .cuebe/dev/components/load-balancer
  component:dev:load-balancer:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/load-balancer/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: load-balancer
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/load-balancer > .cuebe/dev/components/load-balancer/load-balancer.gen.yaml
    deps:
      - task: component:dev:load-balancer:generator-0
      - task: component:dev:load-balancer:generator-1
    generates:
      - .cuebe/dev/components/load-balancer/kustomization.yaml
      - .cuebe/dev/components/load-balancer/load-balancer.gen.yaml
    sources:
      - components/load-balancer/*.cue
      - .cuebe/dev/components/load-balancer/helm.gen.yaml
      - .cuebe/dev/components/load-balancer/resources.gen.yaml
  prod:
    deps:
      - component:prod:metrics-server
      - component:prod:dns
      - component:prod:gateway
      - component:prod:cert-manager
      - component:prod:load-balancer
      - component:prod:metrics
      - component:prod:postgres
      - component:prod:headlamp
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - components/metrics-server/metrics-server.gen.yaml
          - components/dns/dns.gen.yaml
          - components/gateway/gateway.gen.yaml
          - components/cert-manager/cert-manager.gen.yaml
          - components/load-balancer/load-balancer.gen.yaml
          - components/metrics/metrics.gen.yaml
          - components/postgres/postgres.gen.yaml
          - components/headlamp/headlamp.gen.yaml

        EOF
      - kustomize build .cuebe/prod > .cuebe/prod/kustomized.yaml
  component:dev:load-balancer:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/load-balancer/load-balancer.gen.yaml` }}'
    deps:
      - component:dev:load-balancer:transformer-0
    sources:
      - components/load-balancer/*.cue
      - .cuebe/dev/components/load-balancer/load-balancer.gen.yaml
  component:dev:metrics:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: kube-prometheus-stack
                  version: 75.18.1
                  release: kube-prometheus-stack
                  repository:
                    name: kube-prometheus-stack
                    url: https://prometheus-community.github.io/helm-charts
                values:
                  prometheus:
                    prometheusSpec:
                      maximumStartupDurationSeconds: null
                      ruleSelectorNilUsesHelmValues: false
                      serviceMonitorSelectorNilUsesHelmValues: false
                      podMonitorSelectorNilUsesHelmValues: false
                      probeSelectorNilUsesHelmValues: false
                      scrapeConfigSelectorNilUsesHelmValues: false
                    route:
                      main:
                        enabled: true
                        hostnames:
                          - prometheus.services.localhost
                        parentRefs:
                          - kind: Gateway
                            name: traefik-gateway
                            namespace: gateway
                  prometheusOperator:
                    tls:
                      enabled: false
                  grafana:
                    route:
                      main:
                        enabled: true
                        hostnames:
                          - grafana.services.localhost
                        parentRefs:
                          - kind: Gateway
                            name: traefik-gateway
                            namespace: gateway
                enableHooks: false
                namespace: metrics
          SRC_DIR: components/metrics
          OUT_DIR: .cuebe/dev/components/metrics
  component:dev:metrics:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                Namespace:
                  metrics:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      labels:
                        pod-security.kubernetes.io/audit: privileged
                        pod-security.kubernetes.io/enforce: privileged
                        pod-security.kubernetes.io/warn: privileged
                      name: metrics
          SRC_DIR: components/metrics
          OUT_DIR: .cuebe/dev/components/metrics
  component:dev:metrics:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/metrics/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/metrics > .cuebe/dev/components/metrics/metrics.gen.yaml
    deps:
      - task: component:dev:metrics:generator-0
      - task: component:dev:metrics:generator-1
    generates:
      - .cuebe/dev/components/metrics/kustomization.yaml
      - .cuebe/dev/components/metrics/metrics.gen.yaml
    sources:
      - components/metrics/*.cue
      - .cuebe/dev/components/metrics/helm.gen.yaml
      - .cuebe/dev/components/metrics/resources.gen.yaml
  component:dev:metrics:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/metrics/metrics.gen.yaml` }}'
    deps:
      - component:dev:metrics:transformer-0
    sources:
      - components/metrics/*.cue
      - .cuebe/dev/components/metrics/metrics.gen.yaml
  component:dev:metrics:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/metrics/metrics.gen.yaml` }}'
    deps:
      - component:dev:metrics:transformer-0
    sources:
      - components/metrics/*.cue
      - .cuebe/dev/components/metrics/metrics.gen.yaml
  component:dev:postgres:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.postgres.gen.yaml
              helm:
                chart:
                  name: cloudnative-pg
                  release: postgres
                  version: 0.25.0
                  repository:
                    name: cloudnative-pg
                    url: https://cloudnative-pg.github.io/charts
                enableHooks: true
                namespace: postgres
                values:
                  cluster:
                    instances: 2
                    monitoring:
                      enabled: true
          SRC_DIR: components/postgres
          OUT_DIR: .cuebe/dev/components/postgres
  component:dev:postgres:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                Namespace:
                  postgres:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: postgres
          SRC_DIR: components/postgres
          OUT_DIR: .cuebe/dev/components/postgres
  component:dev:postgres:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/postgres/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.postgres.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/postgres > .cuebe/dev/components/postgres/postgres.gen.yaml
    deps:
      - task: component:dev:postgres:generator-0
      - task: component:dev:postgres:generator-1
    generates:
      - .cuebe/dev/components/postgres/kustomization.yaml
      - .cuebe/dev/components/postgres/postgres.gen.yaml
    sources:
      - components/postgres/*.cue
      - .cuebe/dev/components/postgres/helm.postgres.gen.yaml
      - .cuebe/dev/components/postgres/resources.gen.yaml
  component:dev:postgres:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/postgres/postgres.gen.yaml` }}'
    deps:
      - component:dev:postgres:transformer-0
    sources:
      - components/postgres/*.cue
      - .cuebe/dev/components/postgres/postgres.gen.yaml
  component:dev:postgres:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/postgres/postgres.gen.yaml` }}'
    deps:
      - component:dev:postgres:transformer-0
    sources:
      - components/postgres/*.cue
      - .cuebe/dev/components/postgres/postgres.gen.yaml
  component:dev:headlamp:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: headlamp
                  version: 0.34.0
                  release: headlamp
                  repository:
                    name: headlamp
                    url: https://kubernetes-sigs.github.io/headlamp
                values:
                  config:
                    watchPlugins: true
                    extraArgs:
                      - -otlp-endpoint=''
                  pluginsManager:
                    enabled: true
                    configContent: |
                      installOptions:
                        parallel: true
                        maxConcurrent: 2
                      plugins:
                        - name: flux
                          source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_flux
                          version: 0.3.0
                        - name: cert-manager
                          source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_cert-manager
                          version: 0.1.0
                        - name: kompose
                          source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_kompose
                          version: 0.1.0-beta-1
                enableHooks: false
          SRC_DIR: components/headlamp
          OUT_DIR: .cuebe/dev/components/headlamp
  component:dev:headlamp:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                HTTPRoute:
                  headlamp:
                    apiVersion: gateway.networking.k8s.io/v1
                    kind: HTTPRoute
                    metadata:
                      name: headlamp
                      namespace: headlamp
                    spec:
                      hostnames:
                        - services.localhost
                      parentRefs:
                        - kind: Gateway
                          name: traefik-gateway
                          namespace: gateway
                      rules:
                        - backendRefs:
                            - kind: Service
                              name: headlamp
                              port: 80
                Namespace:
                  headlamp:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: headlamp
          SRC_DIR: components/headlamp
          OUT_DIR: .cuebe/dev/components/headlamp
  component:dev:headlamp:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/headlamp/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: headlamp
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/headlamp > .cuebe/dev/components/headlamp/headlamp.gen.yaml
    deps:
      - task: component:dev:headlamp:generator-0
      - task: component:dev:headlamp:generator-1
    generates:
      - .cuebe/dev/components/headlamp/kustomization.yaml
      - .cuebe/dev/components/headlamp/headlamp.gen.yaml
    sources:
      - components/headlamp/*.cue
      - .cuebe/dev/components/headlamp/helm.gen.yaml
      - .cuebe/dev/components/headlamp/resources.gen.yaml
  component:dev:headlamp:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/headlamp/headlamp.gen.yaml` }}'
    deps:
      - component:dev:headlamp:transformer-0
    sources:
      - components/headlamp/*.cue
      - .cuebe/dev/components/headlamp/headlamp.gen.yaml
  component:dev:headlamp:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/headlamp/headlamp.gen.yaml` }}'
    deps:
      - component:dev:headlamp:transformer-0
    sources:
      - components/headlamp/*.cue
      - .cuebe/dev/components/headlamp/headlamp.gen.yaml
  component:prod:metrics-server:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: metrics-server
                  version: 3.13.0
                  release: metrics-server
                  repository:
                    name: metrics-server
                    url: https://kubernetes-sigs.github.io/metrics-server/
                values:
                  args:
                    - --kubelet-insecure-tls
                enableHooks: false
          SRC_DIR: components/metrics-server
          OUT_DIR: .cuebe/prod/components/metrics-server
  component:prod:metrics-server:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources: {}
          SRC_DIR: components/metrics-server
          OUT_DIR: .cuebe/prod/components/metrics-server
  component:prod:metrics-server:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/metrics-server/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: kube-system
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/metrics-server > .cuebe/prod/components/metrics-server/metrics-server.gen.yaml
    deps:
      - task: component:prod:metrics-server:generator-0
      - task: component:prod:metrics-server:generator-1
    generates:
      - .cuebe/prod/components/metrics-server/kustomization.yaml
      - .cuebe/prod/components/metrics-server/metrics-server.gen.yaml
    sources:
      - components/metrics-server/*.cue
      - .cuebe/prod/components/metrics-server/helm.gen.yaml
      - .cuebe/prod/components/metrics-server/resources.gen.yaml
  component:prod:metrics-server:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/metrics-server/metrics-server.gen.yaml` }}'
    deps:
      - component:prod:metrics-server:transformer-0
    sources:
      - components/metrics-server/*.cue
      - .cuebe/prod/components/metrics-server/metrics-server.gen.yaml
  component:prod:metrics-server:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/metrics-server/metrics-server.gen.yaml` }}'
    deps:
      - component:prod:metrics-server:transformer-0
    sources:
      - components/metrics-server/*.cue
      - .cuebe/prod/components/metrics-server/metrics-server.gen.yaml
  component:prod:dns:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: coredns
                  version: 1.43.1
                  release: coredns
                  repository:
                    name: coredns
                    url: https://coredns.github.io/helm
                values:
                  isClusterService: false
                  image:
                    repository: ghcr.io/k8s-gateway/k8s_gateway
                    tag: 1.5.1
                    pullPolicy: IfNotPresent
                  serviceAccount:
                    create: true
                  serviceType: LoadBalancer
                  service:
                    loadBalancerIP: 10.0.1.2
                  servers:
                    - zones:
                        - zone: ballard.coldencullen.com
                      port: 53
                      plugins:
                        - name: cache
                        - name: log
                          parameters: . "{combined}"
                          configBlock: class denial error
                        - name: forward
                          parameters: . 10.0.1.1
                    - zones:
                        - zone: mission.coldencullen.com
                      port: 53
                      plugins:
                        - name: cache
                        - name: log
                          parameters: . "{combined}"
                          configBlock: class denial error
                        - name: forward
                          parameters: . 10.1.1.1
                    - zones:
                        - zone: coldencullen.com
                      port: 53
                      plugins:
                        - name: cache
                        - name: log
                          parameters: . "{combined}"
                          configBlock: class denial error
                        - name: k8s_gateway
                          configBlock: resources HTTPRoute
                    - port: 53
                      plugins:
                        - name: cache
                        - name: log
                          parameters: . "{combined}"
                          configBlock: class denial error
                        - name: any
                        - name: errors
                        - name: health
                        - name: ready
                        - name: prometheus
                          parameters: "0.0.0.0:9153"
                        - name: reload
                          parameters: 30s 5s
                        - name: forward
                          parameters: . tls://1.1.1.1 tls://1.0.0.1
                          configBlock: |-
                            tls
                            tls_servername one.one.one.one
                enableHooks: false
                namespace: dns
          SRC_DIR: components/dns
          OUT_DIR: .cuebe/prod/components/dns
  component:prod:dns:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                ClusterRole:
                  gateway:
                    apiVersion: rbac.authorization.k8s.io/v1
                    kind: ClusterRole
                    metadata:
                      name: gateway
                    rules:
                      - apiGroups:
                          - ""
                        resources:
                          - endpoints
                          - services
                          - pods
                          - namespaces
                        verbs:
                          - list
                          - watch
                      - apiGroups:
                          - apiextensions.k8s.io
                        resources:
                          - customresourcedefinitions
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - gateway.networking.k8s.io
                        resources:
                          - gateways
                          - gatewayclasses
                          - httproutes
                          - tlsroutes
                          - grpcroutes
                        verbs:
                          - watch
                          - list
                      - apiGroups:
                          - externaldns.k8s.io
                        resources:
                          - dnsendpoints
                        verbs:
                          - watch
                          - list
                ClusterRoleBinding:
                  gateway:
                    apiVersion: rbac.authorization.k8s.io/v1
                    kind: ClusterRoleBinding
                    metadata:
                      name: gateway
                    roleRef:
                      apiGroup: rbac.authorization.k8s.io
                      kind: ClusterRole
                      name: gateway
                    subjects:
                      - kind: ServiceAccount
                        name: coredns
                        namespace: dns
                Namespace:
                  dns:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: dns
          SRC_DIR: components/dns
          OUT_DIR: .cuebe/prod/components/dns
  component:prod:dns:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/dns/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/dns > .cuebe/prod/components/dns/dns.gen.yaml
    deps:
      - task: component:prod:dns:generator-0
      - task: component:prod:dns:generator-1
    generates:
      - .cuebe/prod/components/dns/kustomization.yaml
      - .cuebe/prod/components/dns/dns.gen.yaml
    sources:
      - components/dns/*.cue
      - .cuebe/prod/components/dns/helm.gen.yaml
      - .cuebe/prod/components/dns/resources.gen.yaml
  component:prod:dns:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/dns/dns.gen.yaml` }}'
    deps:
      - component:prod:dns:transformer-0
    sources:
      - components/dns/*.cue
      - .cuebe/prod/components/dns/dns.gen.yaml
  component:prod:dns:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/dns/dns.gen.yaml` }}'
    deps:
      - component:prod:dns:transformer-0
    sources:
      - components/dns/*.cue
      - .cuebe/prod/components/dns/dns.gen.yaml
  component:prod:gateway:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: traefik
                  version: 37.0.0
                  release: traefik
                  repository:
                    name: traefik
                    url: https://traefik.github.io/charts
                values:
                  providers:
                    kubernetesIngress:
                      enabled: false
                    kubernetesCRD:
                      enabled: false
                    kubernetesGateway:
                      enabled: true
                      statusAddress:
                        service:
                          enabled: true
                  service:
                    annotations:
                      metallb.io/loadBalancerIPs: 10.0.1.3
                      tilt.dev/port-forward: "8080:80"
                  ports:
                    web:
                      redirections:
                        entryPoint:
                          to: websecure
                          scheme: https
                    websecure:
                      asDefault: true
                  gateway:
                    listeners:
                      web:
                        namespacePolicy:
                          from: All
                      websecure:
                        port: 8443
                        protocol: HTTPS
                        namespacePolicy:
                          from: All
                        certificateRefs:
                          - name: gw-tls-acme-prod
                  metrics:
                    prometheus:
                      serviceMonitor:
                        enabled: true
                enableHooks: false
                namespace: gateway
                apiVersions:
                  - monitoring.coreos.com/v1
          SRC_DIR: components/gateway
          OUT_DIR: .cuebe/prod/components/gateway
  component:prod:gateway:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                Certificate:
                  default:
                    apiVersion: cert-manager.io/v1
                    kind: Certificate
                    metadata:
                      name: default
                      namespace: gateway
                    spec:
                      dnsNames:
                        - coldencullen.com
                        - '*.coldencullen.com'
                        - '*.services.coldencullen.com'
                      issuerRef:
                        kind: Issuer
                        name: acme-prod
                      secretName: gw-tls-acme-prod
                HTTPRoute:
                  traefik:
                    apiVersion: gateway.networking.k8s.io/v1
                    kind: HTTPRoute
                    metadata:
                      name: traefik
                      namespace: gateway
                    spec:
                      hostnames:
                        - traefik.coldencullen.com
                      parentRefs:
                        - kind: Gateway
                          name: traefik-gateway
                      rules:
                        - backendRefs:
                            - kind: TraefikService
                              name: api@internal
                Namespace:
                  gateway:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: gateway
          SRC_DIR: components/gateway
          OUT_DIR: .cuebe/prod/components/gateway
  component:prod:gateway:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/gateway/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/gateway > .cuebe/prod/components/gateway/gateway.gen.yaml
    deps:
      - task: component:prod:gateway:generator-0
      - task: component:prod:gateway:generator-1
    generates:
      - .cuebe/prod/components/gateway/kustomization.yaml
      - .cuebe/prod/components/gateway/gateway.gen.yaml
    sources:
      - components/gateway/*.cue
      - .cuebe/prod/components/gateway/helm.gen.yaml
      - .cuebe/prod/components/gateway/resources.gen.yaml
  component:prod:gateway:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/gateway/gateway.gen.yaml` }}'
    deps:
      - component:prod:gateway:transformer-0
    sources:
      - components/gateway/*.cue
      - .cuebe/prod/components/gateway/gateway.gen.yaml
  component:prod:gateway:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/gateway/gateway.gen.yaml` }}'
    deps:
      - component:prod:gateway:transformer-0
    sources:
      - components/gateway/*.cue
      - .cuebe/prod/components/gateway/gateway.gen.yaml
  component:prod:cert-manager:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: cert-manager
                  version: v1.18.2
                  release: cert-manager
                  repository:
                    name: cert-manager
                    url: https://charts.jetstack.io
                values:
                  crds:
                    enabled: true
                  global:
                    leaderElection:
                      namespace: gateway
                  config:
                    featureGates:
                      ServerSideApply: true
                  prometheus:
                    servicemonitor:
                      enabled: true
                    podmonitor:
                      enabled: false
                enableHooks: false
                namespace: gateway
          SRC_DIR: components/cert-manager
          OUT_DIR: .cuebe/prod/components/cert-manager
  component:prod:cert-manager:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                Issuer:
                  self-signed:
                    apiVersion: cert-manager.io/v1
                    kind: Issuer
                    metadata:
                      name: self-signed
                      namespace: gateway
                    spec:
                      selfSigned: {}
                  acme-staging:
                    apiVersion: cert-manager.io/v1
                    kind: Issuer
                    metadata:
                      name: acme-staging
                      namespace: gateway
                    spec:
                      acme:
                        privateKeySecretRef:
                          name: acme-staging-account-key
                        server: https://acme-staging-v02.api.letsencrypt.org/directory
                        solvers:
                          - dns01:
                              cloudflare:
                                apiTokenSecretRef:
                                  key: api-token
                                  name: cloudflare-api-token
                  acme-prod:
                    apiVersion: cert-manager.io/v1
                    kind: Issuer
                    metadata:
                      name: acme-prod
                      namespace: gateway
                    spec:
                      acme:
                        privateKeySecretRef:
                          name: acme-prod-account-key
                        server: https://acme-v02.api.letsencrypt.org/directory
                        solvers:
                          - dns01:
                              cloudflare:
                                apiTokenSecretRef:
                                  key: api-token
                                  name: cloudflare-api-token
          SRC_DIR: components/cert-manager
          OUT_DIR: .cuebe/prod/components/cert-manager
  component:prod:cert-manager:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/cert-manager/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/cert-manager > .cuebe/prod/components/cert-manager/cert-manager.gen.yaml
    deps:
      - task: component:prod:cert-manager:generator-0
      - task: component:prod:cert-manager:generator-1
    generates:
      - .cuebe/prod/components/cert-manager/kustomization.yaml
      - .cuebe/prod/components/cert-manager/cert-manager.gen.yaml
    sources:
      - components/cert-manager/*.cue
      - .cuebe/prod/components/cert-manager/helm.gen.yaml
      - .cuebe/prod/components/cert-manager/resources.gen.yaml
  component:prod:cert-manager:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/cert-manager/cert-manager.gen.yaml` }}'
    deps:
      - component:prod:cert-manager:transformer-0
    sources:
      - components/cert-manager/*.cue
      - .cuebe/prod/components/cert-manager/cert-manager.gen.yaml
  component:prod:cert-manager:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/cert-manager/cert-manager.gen.yaml` }}'
    deps:
      - component:prod:cert-manager:transformer-0
    sources:
      - components/cert-manager/*.cue
      - .cuebe/prod/components/cert-manager/cert-manager.gen.yaml
  component:prod:load-balancer:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: metallb
                  release: metallb
                  version: 0.15.2
                  repository:
                    name: metallb
                    url: https://metallb.github.io/metallb
                values:
                  speaker:
                    frr:
                      enabled: false
                  prometheus:
                    serviceAccount: prometheus-kube-prometheus-prometheus
                    namespace: metrics
                    serviceMonitor:
                      enabled: true
                enableHooks: false
                namespace: load-balancer
          SRC_DIR: components/load-balancer
          OUT_DIR: .cuebe/prod/components/load-balancer
  component:prod:load-balancer:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                Namespace:
                  load_balancer:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      labels:
                        pod-security.kubernetes.io/enforce: privileged
                        pod-security.kubernetes.io/audit: privileged
                        pod-security.kubernetes.io/warn: privileged
                      name: load-balancer
                IPAddressPool:
                  default:
                    apiVersion: metallb.io/v1beta1
                    kind: IPAddressPool
                    metadata:
                      name: default
                      namespace: load-balancer
                    spec:
                      avoidBuggyIPs: true
                      addresses:
                        - 10.0.1.0/29
                L2Advertisement:
                  default:
                    apiVersion: metallb.io/v1beta1
                    kind: L2Advertisement
                    metadata:
                      name: default
                      namespace: load-balancer
                    spec:
                      ipAddressPools:
                        - default
          SRC_DIR: components/load-balancer
          OUT_DIR: .cuebe/prod/components/load-balancer
  component:prod:load-balancer:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/load-balancer/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: load-balancer
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/load-balancer > .cuebe/prod/components/load-balancer/load-balancer.gen.yaml
    deps:
      - task: component:prod:load-balancer:generator-0
      - task: component:prod:load-balancer:generator-1
    generates:
      - .cuebe/prod/components/load-balancer/kustomization.yaml
      - .cuebe/prod/components/load-balancer/load-balancer.gen.yaml
    sources:
      - components/load-balancer/*.cue
      - .cuebe/prod/components/load-balancer/helm.gen.yaml
      - .cuebe/prod/components/load-balancer/resources.gen.yaml
  component:prod:load-balancer:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/load-balancer/load-balancer.gen.yaml` }}'
    deps:
      - component:prod:load-balancer:transformer-0
    sources:
      - components/load-balancer/*.cue
      - .cuebe/prod/components/load-balancer/load-balancer.gen.yaml
  component:prod:load-balancer:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/load-balancer/load-balancer.gen.yaml` }}'
    deps:
      - component:prod:load-balancer:transformer-0
    sources:
      - components/load-balancer/*.cue
      - .cuebe/prod/components/load-balancer/load-balancer.gen.yaml
  component:prod:metrics:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: kube-prometheus-stack
                  version: 75.18.1
                  release: kube-prometheus-stack
                  repository:
                    name: kube-prometheus-stack
                    url: https://prometheus-community.github.io/helm-charts
                values:
                  prometheus:
                    prometheusSpec:
                      maximumStartupDurationSeconds: null
                      ruleSelectorNilUsesHelmValues: false
                      serviceMonitorSelectorNilUsesHelmValues: false
                      podMonitorSelectorNilUsesHelmValues: false
                      probeSelectorNilUsesHelmValues: false
                      scrapeConfigSelectorNilUsesHelmValues: false
                    route:
                      main:
                        enabled: true
                        hostnames:
                          - prometheus.services.coldencullen.com
                        parentRefs:
                          - kind: Gateway
                            name: traefik-gateway
                            namespace: gateway
                  prometheusOperator:
                    tls:
                      enabled: false
                  grafana:
                    route:
                      main:
                        enabled: true
                        hostnames:
                          - grafana.services.coldencullen.com
                        parentRefs:
                          - kind: Gateway
                            name: traefik-gateway
                            namespace: gateway
                enableHooks: false
                namespace: metrics
          SRC_DIR: components/metrics
          OUT_DIR: .cuebe/prod/components/metrics
  component:prod:metrics:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                Namespace:
                  metrics:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      labels:
                        pod-security.kubernetes.io/audit: privileged
                        pod-security.kubernetes.io/enforce: privileged
                        pod-security.kubernetes.io/warn: privileged
                      name: metrics
          SRC_DIR: components/metrics
          OUT_DIR: .cuebe/prod/components/metrics
  component:prod:metrics:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/metrics/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/metrics > .cuebe/prod/components/metrics/metrics.gen.yaml
    deps:
      - task: component:prod:metrics:generator-0
      - task: component:prod:metrics:generator-1
    generates:
      - .cuebe/prod/components/metrics/kustomization.yaml
      - .cuebe/prod/components/metrics/metrics.gen.yaml
    sources:
      - components/metrics/*.cue
      - .cuebe/prod/components/metrics/helm.gen.yaml
      - .cuebe/prod/components/metrics/resources.gen.yaml
  component:prod:metrics:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/metrics/metrics.gen.yaml` }}'
    deps:
      - component:prod:metrics:transformer-0
    sources:
      - components/metrics/*.cue
      - .cuebe/prod/components/metrics/metrics.gen.yaml
  component:prod:metrics:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/metrics/metrics.gen.yaml` }}'
    deps:
      - component:prod:metrics:transformer-0
    sources:
      - components/metrics/*.cue
      - .cuebe/prod/components/metrics/metrics.gen.yaml
  component:prod:postgres:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.postgres.gen.yaml
              helm:
                chart:
                  name: cloudnative-pg
                  release: postgres
                  version: 0.25.0
                  repository:
                    name: cloudnative-pg
                    url: https://cloudnative-pg.github.io/charts
                enableHooks: true
                namespace: postgres
                values:
                  cluster:
                    instances: 2
                    monitoring:
                      enabled: true
          SRC_DIR: components/postgres
          OUT_DIR: .cuebe/prod/components/postgres
  component:prod:postgres:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                Namespace:
                  postgres:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: postgres
          SRC_DIR: components/postgres
          OUT_DIR: .cuebe/prod/components/postgres
  component:prod:postgres:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/postgres/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.postgres.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/postgres > .cuebe/prod/components/postgres/postgres.gen.yaml
    deps:
      - task: component:prod:postgres:generator-0
      - task: component:prod:postgres:generator-1
    generates:
      - .cuebe/prod/components/postgres/kustomization.yaml
      - .cuebe/prod/components/postgres/postgres.gen.yaml
    sources:
      - components/postgres/*.cue
      - .cuebe/prod/components/postgres/helm.postgres.gen.yaml
      - .cuebe/prod/components/postgres/resources.gen.yaml
  component:prod:postgres:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/postgres/postgres.gen.yaml` }}'
    deps:
      - component:prod:postgres:transformer-0
    sources:
      - components/postgres/*.cue
      - .cuebe/prod/components/postgres/postgres.gen.yaml
  component:prod:postgres:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/postgres/postgres.gen.yaml` }}'
    deps:
      - component:prod:postgres:transformer-0
    sources:
      - components/postgres/*.cue
      - .cuebe/prod/components/postgres/postgres.gen.yaml
  component:prod:headlamp:generator-0:
    deps:
      - task: generator:helm
        vars:
          GENERATOR:
            map:
              kind: Helm
              output: helm.gen.yaml
              helm:
                chart:
                  name: headlamp
                  version: 0.34.0
                  release: headlamp
                  repository:
                    name: headlamp
                    url: https://kubernetes-sigs.github.io/headlamp
                values:
                  config:
                    watchPlugins: true
                    extraArgs:
                      - -otlp-endpoint=''
                  pluginsManager:
                    enabled: true
                    configContent: |
                      installOptions:
                        parallel: true
                        maxConcurrent: 2
                      plugins:
                        - name: flux
                          source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_flux
                          version: 0.3.0
                        - name: cert-manager
                          source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_cert-manager
                          version: 0.1.0
                        - name: kompose
                          source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_kompose
                          version: 0.1.0-beta-1
                enableHooks: false
          SRC_DIR: components/headlamp
          OUT_DIR: .cuebe/prod/components/headlamp
  component:prod:headlamp:generator-1:
    deps:
      - task: generator:resources
        vars:
          GENERATOR:
            map:
              kind: Resources
              output: resources.gen.yaml
              resources:
                HTTPRoute:
                  headlamp:
                    apiVersion: gateway.networking.k8s.io/v1
                    kind: HTTPRoute
                    metadata:
                      name: headlamp
                      namespace: headlamp
                    spec:
                      hostnames:
                        - services.coldencullen.com
                      parentRefs:
                        - kind: Gateway
                          name: traefik-gateway
                          namespace: gateway
                      rules:
                        - backendRefs:
                            - kind: Service
                              name: headlamp
                              port: 80
                Namespace:
                  headlamp:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: headlamp
          SRC_DIR: components/headlamp
          OUT_DIR: .cuebe/prod/components/headlamp
  component:prod:headlamp:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/headlamp/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: headlamp
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/headlamp > .cuebe/prod/components/headlamp/headlamp.gen.yaml
    deps:
      - task: component:prod:headlamp:generator-0
      - task: component:prod:headlamp:generator-1
    generates:
      - .cuebe/prod/components/headlamp/kustomization.yaml
      - .cuebe/prod/components/headlamp/headlamp.gen.yaml
    sources:
      - components/headlamp/*.cue
      - .cuebe/prod/components/headlamp/helm.gen.yaml
      - .cuebe/prod/components/headlamp/resources.gen.yaml
  component:prod:headlamp:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/headlamp/headlamp.gen.yaml` }}'
    deps:
      - component:prod:headlamp:transformer-0
    sources:
      - components/headlamp/*.cue
      - .cuebe/prod/components/headlamp/headlamp.gen.yaml
  component:prod:headlamp:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/headlamp/headlamp.gen.yaml` }}'
    deps:
      - component:prod:headlamp:transformer-0
    sources:
      - components/headlamp/*.cue
      - .cuebe/prod/components/headlamp/headlamp.gen.yaml
