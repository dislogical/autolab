version: 3
silent: true
output: prefixed
run: once
tasks:
  default:
    deps:
      - dev
      - prod
    cmd: echo Done!
  dev:
    deps:
      - component:dev:metrics-server
      - component:dev:dns
      - component:dev:gateway
      - component:dev:cert-manager
      - component:dev:load-balancer
      - component:dev:postgres
      - component:dev:headlamp
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - components/metrics-server/metrics-server.gen.yaml
          - components/dns/dns.gen.yaml
          - components/gateway/gateway.gen.yaml
          - components/cert-manager/cert-manager.gen.yaml
          - components/load-balancer/load-balancer.gen.yaml
          - components/postgres/postgres.gen.yaml
          - components/headlamp/headlamp.gen.yaml

        EOF
      - kustomize build .cuebe/dev > .cuebe/dev/kustomized.yaml
  prod:
    deps:
      - component:prod:metrics-server
      - component:prod:dns
      - component:prod:gateway
      - component:prod:cert-manager
      - component:prod:load-balancer
      - component:prod:postgres
      - component:prod:headlamp
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - components/metrics-server/metrics-server.gen.yaml
          - components/dns/dns.gen.yaml
          - components/gateway/gateway.gen.yaml
          - components/cert-manager/cert-manager.gen.yaml
          - components/load-balancer/load-balancer.gen.yaml
          - components/postgres/postgres.gen.yaml
          - components/headlamp/headlamp.gen.yaml

        EOF
      - kustomize build .cuebe/prod > .cuebe/prod/kustomized.yaml
  helm-pull:metrics-server:metrics-server:3.13.0:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/metrics-server/metrics-server/3.13.0
      - |-
        cat << EOF > .cuebe/helm-cache/metrics-server/metrics-server/3.13.0/pull.sh
        #!/usr/bin/env bash
        helm pull metrics-server \
        	--repo https://kubernetes-sigs.github.io/metrics-server/ \
        	--version 3.13.0 \
        	--destination .cuebe/helm-cache/metrics-server/metrics-server/3.13.0 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/metrics-server/metrics-server/3.13.0/pull.sh
      - .cuebe/helm-cache/metrics-server/metrics-server/3.13.0/pull.sh
    status:
      - stat .cuebe/helm-cache/metrics-server/metrics-server/3.13.0/metrics-server/Chart.yaml
  helm-pull:coredns:coredns:1.43.2:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/coredns/coredns/1.43.2
      - |-
        cat << EOF > .cuebe/helm-cache/coredns/coredns/1.43.2/pull.sh
        #!/usr/bin/env bash
        helm pull coredns \
        	--repo https://coredns.github.io/helm \
        	--version 1.43.2 \
        	--destination .cuebe/helm-cache/coredns/coredns/1.43.2 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/coredns/coredns/1.43.2/pull.sh
      - .cuebe/helm-cache/coredns/coredns/1.43.2/pull.sh
    status:
      - stat .cuebe/helm-cache/coredns/coredns/1.43.2/coredns/Chart.yaml
  helm-pull:traefik:traefik:37.0.0:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/traefik/traefik/37.0.0
      - |-
        cat << EOF > .cuebe/helm-cache/traefik/traefik/37.0.0/pull.sh
        #!/usr/bin/env bash
        helm pull traefik \
        	--repo https://traefik.github.io/charts \
        	--version 37.0.0 \
        	--destination .cuebe/helm-cache/traefik/traefik/37.0.0 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/traefik/traefik/37.0.0/pull.sh
      - .cuebe/helm-cache/traefik/traefik/37.0.0/pull.sh
    status:
      - stat .cuebe/helm-cache/traefik/traefik/37.0.0/traefik/Chart.yaml
  helm-pull:cert-manager:cert-manager:v1.18.2:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2
      - |-
        cat << EOF > .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/pull.sh
        #!/usr/bin/env bash
        helm pull cert-manager \
        	--repo https://charts.jetstack.io \
        	--version v1.18.2 \
        	--destination .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/pull.sh
      - .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/pull.sh
    status:
      - stat .cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/cert-manager/Chart.yaml
  helm-pull:metallb:metallb:0.15.2:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/metallb/metallb/0.15.2
      - |-
        cat << EOF > .cuebe/helm-cache/metallb/metallb/0.15.2/pull.sh
        #!/usr/bin/env bash
        helm pull metallb \
        	--repo https://metallb.github.io/metallb \
        	--version 0.15.2 \
        	--destination .cuebe/helm-cache/metallb/metallb/0.15.2 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/metallb/metallb/0.15.2/pull.sh
      - .cuebe/helm-cache/metallb/metallb/0.15.2/pull.sh
    status:
      - stat .cuebe/helm-cache/metallb/metallb/0.15.2/metallb/Chart.yaml
  helm-pull:cloudnative-pg:cloudnative-pg:0.25.0:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0
      - |-
        cat << EOF > .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/pull.sh
        #!/usr/bin/env bash
        helm pull cloudnative-pg \
        	--repo https://cloudnative-pg.github.io/charts \
        	--version 0.25.0 \
        	--destination .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/pull.sh
      - .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/pull.sh
    status:
      - stat .cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/cloudnative-pg/Chart.yaml
  helm-pull:headlamp:headlamp:0.34.0:
    cmds:
      - echo Pulling...
      - mkdir -p .cuebe/helm-cache/headlamp/headlamp/0.34.0
      - |-
        cat << EOF > .cuebe/helm-cache/headlamp/headlamp/0.34.0/pull.sh
        #!/usr/bin/env bash
        helm pull headlamp \
        	--repo https://kubernetes-sigs.github.io/headlamp \
        	--version 0.34.0 \
        	--destination .cuebe/helm-cache/headlamp/headlamp/0.34.0 \
        	--untar
        EOF
      - chmod +x .cuebe/helm-cache/headlamp/headlamp/0.34.0/pull.sh
      - .cuebe/helm-cache/headlamp/headlamp/0.34.0/pull.sh
    status:
      - stat .cuebe/helm-cache/headlamp/headlamp/0.34.0/headlamp/Chart.yaml
  component:dev:metrics-server:
    deps:
      - component:dev:metrics-server:transformer-0
      - component:dev:metrics-server:validator-0
      - component:dev:metrics-server:validator-1
  component:dev:dns:
    deps:
      - component:dev:dns:transformer-0
      - component:dev:dns:validator-0
      - component:dev:dns:validator-1
  component:dev:gateway:
    deps:
      - component:dev:gateway:transformer-0
      - component:dev:gateway:validator-0
      - component:dev:gateway:validator-1
  component:dev:cert-manager:
    deps:
      - component:dev:cert-manager:transformer-0
      - component:dev:cert-manager:validator-0
      - component:dev:cert-manager:validator-1
  component:dev:load-balancer:
    deps:
      - component:dev:load-balancer:transformer-0
      - component:dev:load-balancer:validator-0
      - component:dev:load-balancer:validator-1
  component:dev:postgres:
    deps:
      - component:dev:postgres:transformer-0
      - component:dev:postgres:validator-0
      - component:dev:postgres:validator-1
  component:dev:headlamp:
    deps:
      - component:dev:headlamp:transformer-0
      - component:dev:headlamp:validator-0
      - component:dev:headlamp:validator-1
  component:prod:metrics-server:
    deps:
      - component:prod:metrics-server:transformer-0
      - component:prod:metrics-server:validator-0
      - component:prod:metrics-server:validator-1
  component:prod:dns:
    deps:
      - component:prod:dns:transformer-0
      - component:prod:dns:validator-0
      - component:prod:dns:validator-1
  component:prod:gateway:
    deps:
      - component:prod:gateway:transformer-0
      - component:prod:gateway:validator-0
      - component:prod:gateway:validator-1
  component:prod:cert-manager:
    deps:
      - component:prod:cert-manager:transformer-0
      - component:prod:cert-manager:validator-0
      - component:prod:cert-manager:validator-1
  component:prod:load-balancer:
    deps:
      - component:prod:load-balancer:transformer-0
      - component:prod:load-balancer:validator-0
      - component:prod:load-balancer:validator-1
  component:prod:postgres:
    deps:
      - component:prod:postgres:transformer-0
      - component:prod:postgres:validator-0
      - component:prod:postgres:validator-1
  component:prod:headlamp:
    deps:
      - component:prod:headlamp:transformer-0
      - component:prod:headlamp:validator-0
      - component:prod:headlamp:validator-1
  component:dev:metrics-server:generator-0:
    deps:
      - helm-pull:metrics-server:metrics-server:3.13.0
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/dev/components/metrics-server
      - |-
        cat << EOF > .cuebe/dev/components/metrics-server/helm.metrics-server.values.yaml
        args:
          - --kubelet-insecure-tls

        EOF
      - |-
        helm template metrics-server \
        	./.cuebe/helm-cache/metrics-server/metrics-server/3.13.0/metrics-server \
        	--values .cuebe/dev/components/metrics-server/helm.metrics-server.values.yaml \
        	--include-crds \
        	 \
        	 \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/dev/components/metrics-server/helm.gen.yaml
    sources:
      - components/metrics-server/*.cue
    generates:
      - .cuebe/dev/components/metrics-server/helm.gen.yaml
  component:dev:metrics-server:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/dev/components/metrics-server
      - |-
        cue export ./components/metrics-server -o text:.cuebe/dev/components/metrics-server/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/metrics-server/*.cue
    generates:
      - .cuebe/dev/components/metrics-server/resources.gen.yaml
  component:dev:metrics-server:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/metrics-server/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: kube-system
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/metrics-server > .cuebe/dev/components/metrics-server/metrics-server.gen.yaml
    deps:
      - component:dev:metrics-server:generator-0
      - component:dev:metrics-server:generator-1
    generates:
      - .cuebe/dev/components/metrics-server/kustomization.yaml
      - .cuebe/dev/components/metrics-server/metrics-server.gen.yaml
    sources:
      - components/metrics-server/*.cue
      - .cuebe/dev/components/metrics-server/helm.gen.yaml
      - .cuebe/dev/components/metrics-server/resources.gen.yaml
  component:dev:metrics-server:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/metrics-server/metrics-server.gen.yaml` }}'
    deps:
      - component:dev:metrics-server:transformer-0
    sources:
      - components/metrics-server/*.cue
      - .cuebe/dev/components/metrics-server/metrics-server.gen.yaml
  component:dev:metrics-server:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/metrics-server/metrics-server.gen.yaml` }}'
    deps:
      - component:dev:metrics-server:transformer-0
    sources:
      - components/metrics-server/*.cue
      - .cuebe/dev/components/metrics-server/metrics-server.gen.yaml
  component:dev:dns:generator-0:
    deps:
      - helm-pull:coredns:coredns:1.43.2
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/dev/components/dns
      - |-
        cat << EOF > .cuebe/dev/components/dns/helm.coredns.values.yaml
        isClusterService: false
        image:
          repository: ghcr.io/k8s-gateway/k8s_gateway
          tag: 1.5.1
          pullPolicy: IfNotPresent
        serviceAccount:
          create: true
        serviceType: LoadBalancer
        service:
          loadBalancerIP: 10.0.1.2
        servers:
          - zones:
              - zone: ballard.localhost
            port: 53
            plugins:
              - name: cache
              - name: log
                parameters: . "{combined}"
                configBlock: class denial error
              - name: forward
                parameters: . 10.0.1.1
          - zones:
              - zone: mission.localhost
            port: 53
            plugins:
              - name: cache
              - name: log
                parameters: . "{combined}"
                configBlock: class denial error
              - name: forward
                parameters: . 10.1.1.1
          - zones:
              - zone: localhost
            port: 53
            plugins:
              - name: cache
              - name: log
                parameters: . "{combined}"
                configBlock: class denial error
              - name: k8s_gateway
                configBlock: resources HTTPRoute
          - port: 53
            plugins:
              - name: cache
              - name: log
                parameters: . "{combined}"
                configBlock: class denial error
              - name: any
              - name: errors
              - name: health
              - name: ready
              - name: prometheus
                parameters: "0.0.0.0:9153"
              - name: reload
                parameters: 30s 5s
              - name: forward
                parameters: . tls://1.1.1.1 tls://1.0.0.1
                configBlock: |-
                  tls
                  tls_servername one.one.one.one

        EOF
      - |-
        helm template coredns \
        	./.cuebe/helm-cache/coredns/coredns/1.43.2/coredns \
        	--values .cuebe/dev/components/dns/helm.coredns.values.yaml \
        	--include-crds \
        	--namespace dns \
        	 \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/dev/components/dns/helm.gen.yaml
    sources:
      - components/dns/*.cue
    generates:
      - .cuebe/dev/components/dns/helm.gen.yaml
  component:dev:dns:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/dev/components/dns
      - |-
        cue export ./components/dns -o text:.cuebe/dev/components/dns/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/dns/*.cue
    generates:
      - .cuebe/dev/components/dns/resources.gen.yaml
  component:dev:dns:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/dns/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/dns > .cuebe/dev/components/dns/dns.gen.yaml
    deps:
      - component:dev:dns:generator-0
      - component:dev:dns:generator-1
    generates:
      - .cuebe/dev/components/dns/kustomization.yaml
      - .cuebe/dev/components/dns/dns.gen.yaml
    sources:
      - components/dns/*.cue
      - .cuebe/dev/components/dns/helm.gen.yaml
      - .cuebe/dev/components/dns/resources.gen.yaml
  component:dev:dns:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/dns/dns.gen.yaml` }}'
    deps:
      - component:dev:dns:transformer-0
    sources:
      - components/dns/*.cue
      - .cuebe/dev/components/dns/dns.gen.yaml
  component:dev:dns:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/dns/dns.gen.yaml` }}'
    deps:
      - component:dev:dns:transformer-0
    sources:
      - components/dns/*.cue
      - .cuebe/dev/components/dns/dns.gen.yaml
  component:dev:gateway:generator-0:
    deps:
      - helm-pull:traefik:traefik:37.0.0
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/dev/components/gateway
      - |-
        cat << EOF > .cuebe/dev/components/gateway/helm.traefik.values.yaml
        providers:
          kubernetesIngress:
            enabled: false
          kubernetesCRD:
            enabled: false
          kubernetesGateway:
            enabled: true
            statusAddress:
              service:
                enabled: true
        service:
          annotations:
            metallb.io/loadBalancerIPs: 10.0.1.3
            tilt.dev/port-forward: "8080:80"
        ports:
          web:
            redirections:
              entryPoint:
                to: websecure
                scheme: https
          websecure:
            asDefault: true
        gateway:
          listeners:
            web:
              namespacePolicy:
                from: All
            websecure:
              port: 8443
              protocol: HTTPS
              namespacePolicy:
                from: All
              certificateRefs:
                - name: gw-tls-self-signed

        EOF
      - |-
        helm template traefik \
        	./.cuebe/helm-cache/traefik/traefik/37.0.0/traefik \
        	--values .cuebe/dev/components/gateway/helm.traefik.values.yaml \
        	--include-crds \
        	--namespace gateway \
        	--api-versions 'monitoring.coreos.com/v1' \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/dev/components/gateway/helm.gen.yaml
    sources:
      - components/gateway/*.cue
    generates:
      - .cuebe/dev/components/gateway/helm.gen.yaml
  component:dev:gateway:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/dev/components/gateway
      - |-
        cue export ./components/gateway -o text:.cuebe/dev/components/gateway/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/gateway/*.cue
    generates:
      - .cuebe/dev/components/gateway/resources.gen.yaml
  component:dev:gateway:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/gateway/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/gateway > .cuebe/dev/components/gateway/gateway.gen.yaml
    deps:
      - component:dev:gateway:generator-0
      - component:dev:gateway:generator-1
    generates:
      - .cuebe/dev/components/gateway/kustomization.yaml
      - .cuebe/dev/components/gateway/gateway.gen.yaml
    sources:
      - components/gateway/*.cue
      - .cuebe/dev/components/gateway/helm.gen.yaml
      - .cuebe/dev/components/gateway/resources.gen.yaml
  component:dev:gateway:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/gateway/gateway.gen.yaml` }}'
    deps:
      - component:dev:gateway:transformer-0
    sources:
      - components/gateway/*.cue
      - .cuebe/dev/components/gateway/gateway.gen.yaml
  component:dev:gateway:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/gateway/gateway.gen.yaml` }}'
    deps:
      - component:dev:gateway:transformer-0
    sources:
      - components/gateway/*.cue
      - .cuebe/dev/components/gateway/gateway.gen.yaml
  component:dev:cert-manager:generator-0:
    deps:
      - helm-pull:cert-manager:cert-manager:v1.18.2
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/dev/components/cert-manager
      - |-
        cat << EOF > .cuebe/dev/components/cert-manager/helm.cert-manager.values.yaml
        crds:
          enabled: true
        global:
          leaderElection:
            namespace: gateway
        config:
          featureGates:
            ServerSideApply: true

        EOF
      - |-
        helm template cert-manager \
        	./.cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/cert-manager \
        	--values .cuebe/dev/components/cert-manager/helm.cert-manager.values.yaml \
        	--include-crds \
        	--namespace gateway \
        	 \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/dev/components/cert-manager/helm.gen.yaml
    sources:
      - components/cert-manager/*.cue
    generates:
      - .cuebe/dev/components/cert-manager/helm.gen.yaml
  component:dev:cert-manager:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/dev/components/cert-manager
      - |-
        cue export ./components/cert-manager -o text:.cuebe/dev/components/cert-manager/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/cert-manager/*.cue
    generates:
      - .cuebe/dev/components/cert-manager/resources.gen.yaml
  component:dev:cert-manager:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/cert-manager/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/cert-manager > .cuebe/dev/components/cert-manager/cert-manager.gen.yaml
    deps:
      - component:dev:cert-manager:generator-0
      - component:dev:cert-manager:generator-1
    generates:
      - .cuebe/dev/components/cert-manager/kustomization.yaml
      - .cuebe/dev/components/cert-manager/cert-manager.gen.yaml
    sources:
      - components/cert-manager/*.cue
      - .cuebe/dev/components/cert-manager/helm.gen.yaml
      - .cuebe/dev/components/cert-manager/resources.gen.yaml
  component:dev:cert-manager:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/cert-manager/cert-manager.gen.yaml` }}'
    deps:
      - component:dev:cert-manager:transformer-0
    sources:
      - components/cert-manager/*.cue
      - .cuebe/dev/components/cert-manager/cert-manager.gen.yaml
  component:dev:cert-manager:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/cert-manager/cert-manager.gen.yaml` }}'
    deps:
      - component:dev:cert-manager:transformer-0
    sources:
      - components/cert-manager/*.cue
      - .cuebe/dev/components/cert-manager/cert-manager.gen.yaml
  component:dev:load-balancer:generator-0:
    deps:
      - helm-pull:metallb:metallb:0.15.2
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/dev/components/load-balancer
      - |-
        cat << EOF > .cuebe/dev/components/load-balancer/helm.metallb.values.yaml
        speaker:
          frr:
            enabled: false

        EOF
      - |-
        helm template metallb \
        	./.cuebe/helm-cache/metallb/metallb/0.15.2/metallb \
        	--values .cuebe/dev/components/load-balancer/helm.metallb.values.yaml \
        	--include-crds \
        	--namespace load-balancer \
        	 \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/dev/components/load-balancer/helm.gen.yaml
    sources:
      - components/load-balancer/*.cue
    generates:
      - .cuebe/dev/components/load-balancer/helm.gen.yaml
  component:dev:load-balancer:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/dev/components/load-balancer
      - |-
        cue export ./components/load-balancer -o text:.cuebe/dev/components/load-balancer/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/load-balancer/*.cue
    generates:
      - .cuebe/dev/components/load-balancer/resources.gen.yaml
  component:dev:load-balancer:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/load-balancer/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: load-balancer
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/load-balancer > .cuebe/dev/components/load-balancer/load-balancer.gen.yaml
    deps:
      - component:dev:load-balancer:generator-0
      - component:dev:load-balancer:generator-1
    generates:
      - .cuebe/dev/components/load-balancer/kustomization.yaml
      - .cuebe/dev/components/load-balancer/load-balancer.gen.yaml
    sources:
      - components/load-balancer/*.cue
      - .cuebe/dev/components/load-balancer/helm.gen.yaml
      - .cuebe/dev/components/load-balancer/resources.gen.yaml
  component:dev:load-balancer:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/load-balancer/load-balancer.gen.yaml` }}'
    deps:
      - component:dev:load-balancer:transformer-0
    sources:
      - components/load-balancer/*.cue
      - .cuebe/dev/components/load-balancer/load-balancer.gen.yaml
  component:dev:load-balancer:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/load-balancer/load-balancer.gen.yaml` }}'
    deps:
      - component:dev:load-balancer:transformer-0
    sources:
      - components/load-balancer/*.cue
      - .cuebe/dev/components/load-balancer/load-balancer.gen.yaml
  component:dev:postgres:generator-0:
    deps:
      - helm-pull:cloudnative-pg:cloudnative-pg:0.25.0
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/dev/components/postgres
      - |-
        cat << EOF > .cuebe/dev/components/postgres/helm.postgres.values.yaml
        cluster:
          instances: 2
          monitoring:
            enabled: true

        EOF
      - |-
        helm template postgres \
        	./.cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/cloudnative-pg \
        	--values .cuebe/dev/components/postgres/helm.postgres.values.yaml \
        	--include-crds \
        	--namespace postgres \
        	 \
        	--atomic \
        	{{if not true}}--no-hooks{{end}} \
        	> .cuebe/dev/components/postgres/helm.postgres.gen.yaml
    sources:
      - components/postgres/*.cue
    generates:
      - .cuebe/dev/components/postgres/helm.postgres.gen.yaml
  component:dev:postgres:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/dev/components/postgres
      - |-
        cue export ./components/postgres -o text:.cuebe/dev/components/postgres/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/postgres/*.cue
    generates:
      - .cuebe/dev/components/postgres/resources.gen.yaml
  component:dev:postgres:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/postgres/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.postgres.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/postgres > .cuebe/dev/components/postgres/postgres.gen.yaml
    deps:
      - component:dev:postgres:generator-0
      - component:dev:postgres:generator-1
    generates:
      - .cuebe/dev/components/postgres/kustomization.yaml
      - .cuebe/dev/components/postgres/postgres.gen.yaml
    sources:
      - components/postgres/*.cue
      - .cuebe/dev/components/postgres/helm.postgres.gen.yaml
      - .cuebe/dev/components/postgres/resources.gen.yaml
  component:dev:postgres:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/postgres/postgres.gen.yaml` }}'
    deps:
      - component:dev:postgres:transformer-0
    sources:
      - components/postgres/*.cue
      - .cuebe/dev/components/postgres/postgres.gen.yaml
  component:dev:postgres:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/postgres/postgres.gen.yaml` }}'
    deps:
      - component:dev:postgres:transformer-0
    sources:
      - components/postgres/*.cue
      - .cuebe/dev/components/postgres/postgres.gen.yaml
  component:dev:headlamp:generator-0:
    deps:
      - helm-pull:headlamp:headlamp:0.34.0
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/dev/components/headlamp
      - |-
        cat << EOF > .cuebe/dev/components/headlamp/helm.headlamp.values.yaml
        config:
          watchPlugins: true
          extraArgs:
            - -otlp-endpoint=''
        pluginsManager:
          enabled: true
          configContent: |
            installOptions:
              parallel: true
              maxConcurrent: 2
            plugins:
              - name: flux
                source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_flux
                version: 0.3.0
              - name: cert-manager
                source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_cert-manager
                version: 0.1.0
              - name: kompose
                source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_kompose
                version: 0.1.0-beta-1

        EOF
      - |-
        helm template headlamp \
        	./.cuebe/helm-cache/headlamp/headlamp/0.34.0/headlamp \
        	--values .cuebe/dev/components/headlamp/helm.headlamp.values.yaml \
        	--include-crds \
        	 \
        	 \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/dev/components/headlamp/helm.gen.yaml
    sources:
      - components/headlamp/*.cue
    generates:
      - .cuebe/dev/components/headlamp/helm.gen.yaml
  component:dev:headlamp:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/dev/components/headlamp
      - |-
        cue export ./components/headlamp -o text:.cuebe/dev/components/headlamp/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/headlamp/*.cue
    generates:
      - .cuebe/dev/components/headlamp/resources.gen.yaml
  component:dev:headlamp:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/dev/components/headlamp/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: headlamp
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/dev/components/headlamp > .cuebe/dev/components/headlamp/headlamp.gen.yaml
    deps:
      - component:dev:headlamp:generator-0
      - component:dev:headlamp:generator-1
    generates:
      - .cuebe/dev/components/headlamp/kustomization.yaml
      - .cuebe/dev/components/headlamp/headlamp.gen.yaml
    sources:
      - components/headlamp/*.cue
      - .cuebe/dev/components/headlamp/helm.gen.yaml
      - .cuebe/dev/components/headlamp/resources.gen.yaml
  component:dev:headlamp:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/dev/components/headlamp/headlamp.gen.yaml` }}'
    deps:
      - component:dev:headlamp:transformer-0
    sources:
      - components/headlamp/*.cue
      - .cuebe/dev/components/headlamp/headlamp.gen.yaml
  component:dev:headlamp:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/dev/components/headlamp/headlamp.gen.yaml` }}'
    deps:
      - component:dev:headlamp:transformer-0
    sources:
      - components/headlamp/*.cue
      - .cuebe/dev/components/headlamp/headlamp.gen.yaml
  component:prod:metrics-server:generator-0:
    deps:
      - helm-pull:metrics-server:metrics-server:3.13.0
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/prod/components/metrics-server
      - |-
        cat << EOF > .cuebe/prod/components/metrics-server/helm.metrics-server.values.yaml
        args:
          - --kubelet-insecure-tls

        EOF
      - |-
        helm template metrics-server \
        	./.cuebe/helm-cache/metrics-server/metrics-server/3.13.0/metrics-server \
        	--values .cuebe/prod/components/metrics-server/helm.metrics-server.values.yaml \
        	--include-crds \
        	 \
        	 \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/prod/components/metrics-server/helm.gen.yaml
    sources:
      - components/metrics-server/*.cue
    generates:
      - .cuebe/prod/components/metrics-server/helm.gen.yaml
  component:prod:metrics-server:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/prod/components/metrics-server
      - |-
        cue export ./components/metrics-server -o text:.cuebe/prod/components/metrics-server/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/metrics-server/*.cue
    generates:
      - .cuebe/prod/components/metrics-server/resources.gen.yaml
  component:prod:metrics-server:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/metrics-server/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: kube-system
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/metrics-server > .cuebe/prod/components/metrics-server/metrics-server.gen.yaml
    deps:
      - component:prod:metrics-server:generator-0
      - component:prod:metrics-server:generator-1
    generates:
      - .cuebe/prod/components/metrics-server/kustomization.yaml
      - .cuebe/prod/components/metrics-server/metrics-server.gen.yaml
    sources:
      - components/metrics-server/*.cue
      - .cuebe/prod/components/metrics-server/helm.gen.yaml
      - .cuebe/prod/components/metrics-server/resources.gen.yaml
  component:prod:metrics-server:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/metrics-server/metrics-server.gen.yaml` }}'
    deps:
      - component:prod:metrics-server:transformer-0
    sources:
      - components/metrics-server/*.cue
      - .cuebe/prod/components/metrics-server/metrics-server.gen.yaml
  component:prod:metrics-server:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/metrics-server/metrics-server.gen.yaml` }}'
    deps:
      - component:prod:metrics-server:transformer-0
    sources:
      - components/metrics-server/*.cue
      - .cuebe/prod/components/metrics-server/metrics-server.gen.yaml
  component:prod:dns:generator-0:
    deps:
      - helm-pull:coredns:coredns:1.43.2
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/prod/components/dns
      - |-
        cat << EOF > .cuebe/prod/components/dns/helm.coredns.values.yaml
        isClusterService: false
        image:
          repository: ghcr.io/k8s-gateway/k8s_gateway
          tag: 1.5.1
          pullPolicy: IfNotPresent
        serviceAccount:
          create: true
        serviceType: LoadBalancer
        service:
          loadBalancerIP: 10.0.1.2
        servers:
          - zones:
              - zone: ballard.coldencullen.com
            port: 53
            plugins:
              - name: cache
              - name: log
                parameters: . "{combined}"
                configBlock: class denial error
              - name: forward
                parameters: . 10.0.1.1
          - zones:
              - zone: mission.coldencullen.com
            port: 53
            plugins:
              - name: cache
              - name: log
                parameters: . "{combined}"
                configBlock: class denial error
              - name: forward
                parameters: . 10.1.1.1
          - zones:
              - zone: coldencullen.com
            port: 53
            plugins:
              - name: cache
              - name: log
                parameters: . "{combined}"
                configBlock: class denial error
              - name: k8s_gateway
                configBlock: resources HTTPRoute
          - port: 53
            plugins:
              - name: cache
              - name: log
                parameters: . "{combined}"
                configBlock: class denial error
              - name: any
              - name: errors
              - name: health
              - name: ready
              - name: prometheus
                parameters: "0.0.0.0:9153"
              - name: reload
                parameters: 30s 5s
              - name: forward
                parameters: . tls://1.1.1.1 tls://1.0.0.1
                configBlock: |-
                  tls
                  tls_servername one.one.one.one

        EOF
      - |-
        helm template coredns \
        	./.cuebe/helm-cache/coredns/coredns/1.43.2/coredns \
        	--values .cuebe/prod/components/dns/helm.coredns.values.yaml \
        	--include-crds \
        	--namespace dns \
        	 \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/prod/components/dns/helm.gen.yaml
    sources:
      - components/dns/*.cue
    generates:
      - .cuebe/prod/components/dns/helm.gen.yaml
  component:prod:dns:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/prod/components/dns
      - |-
        cue export ./components/dns -o text:.cuebe/prod/components/dns/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/dns/*.cue
    generates:
      - .cuebe/prod/components/dns/resources.gen.yaml
  component:prod:dns:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/dns/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/dns > .cuebe/prod/components/dns/dns.gen.yaml
    deps:
      - component:prod:dns:generator-0
      - component:prod:dns:generator-1
    generates:
      - .cuebe/prod/components/dns/kustomization.yaml
      - .cuebe/prod/components/dns/dns.gen.yaml
    sources:
      - components/dns/*.cue
      - .cuebe/prod/components/dns/helm.gen.yaml
      - .cuebe/prod/components/dns/resources.gen.yaml
  component:prod:dns:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/dns/dns.gen.yaml` }}'
    deps:
      - component:prod:dns:transformer-0
    sources:
      - components/dns/*.cue
      - .cuebe/prod/components/dns/dns.gen.yaml
  component:prod:dns:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/dns/dns.gen.yaml` }}'
    deps:
      - component:prod:dns:transformer-0
    sources:
      - components/dns/*.cue
      - .cuebe/prod/components/dns/dns.gen.yaml
  component:prod:gateway:generator-0:
    deps:
      - helm-pull:traefik:traefik:37.0.0
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/prod/components/gateway
      - |-
        cat << EOF > .cuebe/prod/components/gateway/helm.traefik.values.yaml
        providers:
          kubernetesIngress:
            enabled: false
          kubernetesCRD:
            enabled: false
          kubernetesGateway:
            enabled: true
            statusAddress:
              service:
                enabled: true
        service:
          annotations:
            metallb.io/loadBalancerIPs: 10.0.1.3
            tilt.dev/port-forward: "8080:80"
        ports:
          web:
            redirections:
              entryPoint:
                to: websecure
                scheme: https
          websecure:
            asDefault: true
        gateway:
          listeners:
            web:
              namespacePolicy:
                from: All
            websecure:
              port: 8443
              protocol: HTTPS
              namespacePolicy:
                from: All
              certificateRefs:
                - name: gw-tls-acme-prod

        EOF
      - |-
        helm template traefik \
        	./.cuebe/helm-cache/traefik/traefik/37.0.0/traefik \
        	--values .cuebe/prod/components/gateway/helm.traefik.values.yaml \
        	--include-crds \
        	--namespace gateway \
        	--api-versions 'monitoring.coreos.com/v1' \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/prod/components/gateway/helm.gen.yaml
    sources:
      - components/gateway/*.cue
    generates:
      - .cuebe/prod/components/gateway/helm.gen.yaml
  component:prod:gateway:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/prod/components/gateway
      - |-
        cue export ./components/gateway -o text:.cuebe/prod/components/gateway/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/gateway/*.cue
    generates:
      - .cuebe/prod/components/gateway/resources.gen.yaml
  component:prod:gateway:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/gateway/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/gateway > .cuebe/prod/components/gateway/gateway.gen.yaml
    deps:
      - component:prod:gateway:generator-0
      - component:prod:gateway:generator-1
    generates:
      - .cuebe/prod/components/gateway/kustomization.yaml
      - .cuebe/prod/components/gateway/gateway.gen.yaml
    sources:
      - components/gateway/*.cue
      - .cuebe/prod/components/gateway/helm.gen.yaml
      - .cuebe/prod/components/gateway/resources.gen.yaml
  component:prod:gateway:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/gateway/gateway.gen.yaml` }}'
    deps:
      - component:prod:gateway:transformer-0
    sources:
      - components/gateway/*.cue
      - .cuebe/prod/components/gateway/gateway.gen.yaml
  component:prod:gateway:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/gateway/gateway.gen.yaml` }}'
    deps:
      - component:prod:gateway:transformer-0
    sources:
      - components/gateway/*.cue
      - .cuebe/prod/components/gateway/gateway.gen.yaml
  component:prod:cert-manager:generator-0:
    deps:
      - helm-pull:cert-manager:cert-manager:v1.18.2
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/prod/components/cert-manager
      - |-
        cat << EOF > .cuebe/prod/components/cert-manager/helm.cert-manager.values.yaml
        crds:
          enabled: true
        global:
          leaderElection:
            namespace: gateway
        config:
          featureGates:
            ServerSideApply: true

        EOF
      - |-
        helm template cert-manager \
        	./.cuebe/helm-cache/cert-manager/cert-manager/v1.18.2/cert-manager \
        	--values .cuebe/prod/components/cert-manager/helm.cert-manager.values.yaml \
        	--include-crds \
        	--namespace gateway \
        	 \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/prod/components/cert-manager/helm.gen.yaml
    sources:
      - components/cert-manager/*.cue
    generates:
      - .cuebe/prod/components/cert-manager/helm.gen.yaml
  component:prod:cert-manager:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/prod/components/cert-manager
      - |-
        cue export ./components/cert-manager -o text:.cuebe/prod/components/cert-manager/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/cert-manager/*.cue
    generates:
      - .cuebe/prod/components/cert-manager/resources.gen.yaml
  component:prod:cert-manager:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/cert-manager/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/cert-manager > .cuebe/prod/components/cert-manager/cert-manager.gen.yaml
    deps:
      - component:prod:cert-manager:generator-0
      - component:prod:cert-manager:generator-1
    generates:
      - .cuebe/prod/components/cert-manager/kustomization.yaml
      - .cuebe/prod/components/cert-manager/cert-manager.gen.yaml
    sources:
      - components/cert-manager/*.cue
      - .cuebe/prod/components/cert-manager/helm.gen.yaml
      - .cuebe/prod/components/cert-manager/resources.gen.yaml
  component:prod:cert-manager:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/cert-manager/cert-manager.gen.yaml` }}'
    deps:
      - component:prod:cert-manager:transformer-0
    sources:
      - components/cert-manager/*.cue
      - .cuebe/prod/components/cert-manager/cert-manager.gen.yaml
  component:prod:cert-manager:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/cert-manager/cert-manager.gen.yaml` }}'
    deps:
      - component:prod:cert-manager:transformer-0
    sources:
      - components/cert-manager/*.cue
      - .cuebe/prod/components/cert-manager/cert-manager.gen.yaml
  component:prod:load-balancer:generator-0:
    deps:
      - helm-pull:metallb:metallb:0.15.2
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/prod/components/load-balancer
      - |-
        cat << EOF > .cuebe/prod/components/load-balancer/helm.metallb.values.yaml
        speaker:
          frr:
            enabled: false

        EOF
      - |-
        helm template metallb \
        	./.cuebe/helm-cache/metallb/metallb/0.15.2/metallb \
        	--values .cuebe/prod/components/load-balancer/helm.metallb.values.yaml \
        	--include-crds \
        	--namespace load-balancer \
        	 \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/prod/components/load-balancer/helm.gen.yaml
    sources:
      - components/load-balancer/*.cue
    generates:
      - .cuebe/prod/components/load-balancer/helm.gen.yaml
  component:prod:load-balancer:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/prod/components/load-balancer
      - |-
        cue export ./components/load-balancer -o text:.cuebe/prod/components/load-balancer/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/load-balancer/*.cue
    generates:
      - .cuebe/prod/components/load-balancer/resources.gen.yaml
  component:prod:load-balancer:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/load-balancer/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: load-balancer
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/load-balancer > .cuebe/prod/components/load-balancer/load-balancer.gen.yaml
    deps:
      - component:prod:load-balancer:generator-0
      - component:prod:load-balancer:generator-1
    generates:
      - .cuebe/prod/components/load-balancer/kustomization.yaml
      - .cuebe/prod/components/load-balancer/load-balancer.gen.yaml
    sources:
      - components/load-balancer/*.cue
      - .cuebe/prod/components/load-balancer/helm.gen.yaml
      - .cuebe/prod/components/load-balancer/resources.gen.yaml
  component:prod:load-balancer:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/load-balancer/load-balancer.gen.yaml` }}'
    deps:
      - component:prod:load-balancer:transformer-0
    sources:
      - components/load-balancer/*.cue
      - .cuebe/prod/components/load-balancer/load-balancer.gen.yaml
  component:prod:load-balancer:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/load-balancer/load-balancer.gen.yaml` }}'
    deps:
      - component:prod:load-balancer:transformer-0
    sources:
      - components/load-balancer/*.cue
      - .cuebe/prod/components/load-balancer/load-balancer.gen.yaml
  component:prod:postgres:generator-0:
    deps:
      - helm-pull:cloudnative-pg:cloudnative-pg:0.25.0
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/prod/components/postgres
      - |-
        cat << EOF > .cuebe/prod/components/postgres/helm.postgres.values.yaml
        cluster:
          instances: 2
          monitoring:
            enabled: true

        EOF
      - |-
        helm template postgres \
        	./.cuebe/helm-cache/cloudnative-pg/cloudnative-pg/0.25.0/cloudnative-pg \
        	--values .cuebe/prod/components/postgres/helm.postgres.values.yaml \
        	--include-crds \
        	--namespace postgres \
        	 \
        	--atomic \
        	{{if not true}}--no-hooks{{end}} \
        	> .cuebe/prod/components/postgres/helm.postgres.gen.yaml
    sources:
      - components/postgres/*.cue
    generates:
      - .cuebe/prod/components/postgres/helm.postgres.gen.yaml
  component:prod:postgres:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/prod/components/postgres
      - |-
        cue export ./components/postgres -o text:.cuebe/prod/components/postgres/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/postgres/*.cue
    generates:
      - .cuebe/prod/components/postgres/resources.gen.yaml
  component:prod:postgres:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/postgres/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
          - helm.postgres.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/postgres > .cuebe/prod/components/postgres/postgres.gen.yaml
    deps:
      - component:prod:postgres:generator-0
      - component:prod:postgres:generator-1
    generates:
      - .cuebe/prod/components/postgres/kustomization.yaml
      - .cuebe/prod/components/postgres/postgres.gen.yaml
    sources:
      - components/postgres/*.cue
      - .cuebe/prod/components/postgres/helm.postgres.gen.yaml
      - .cuebe/prod/components/postgres/resources.gen.yaml
  component:prod:postgres:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/postgres/postgres.gen.yaml` }}'
    deps:
      - component:prod:postgres:transformer-0
    sources:
      - components/postgres/*.cue
      - .cuebe/prod/components/postgres/postgres.gen.yaml
  component:prod:postgres:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/postgres/postgres.gen.yaml` }}'
    deps:
      - component:prod:postgres:transformer-0
    sources:
      - components/postgres/*.cue
      - .cuebe/prod/components/postgres/postgres.gen.yaml
  component:prod:headlamp:generator-0:
    deps:
      - helm-pull:headlamp:headlamp:0.34.0
    cmds:
      - echo Rendering Chart...
      - mkdir -p .cuebe/prod/components/headlamp
      - |-
        cat << EOF > .cuebe/prod/components/headlamp/helm.headlamp.values.yaml
        config:
          watchPlugins: true
          extraArgs:
            - -otlp-endpoint=''
        pluginsManager:
          enabled: true
          configContent: |
            installOptions:
              parallel: true
              maxConcurrent: 2
            plugins:
              - name: flux
                source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_flux
                version: 0.3.0
              - name: cert-manager
                source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_cert-manager
                version: 0.1.0
              - name: kompose
                source: https://artifacthub.io/packages/headlamp/headlamp-plugins/headlamp_kompose
                version: 0.1.0-beta-1

        EOF
      - |-
        helm template headlamp \
        	./.cuebe/helm-cache/headlamp/headlamp/0.34.0/headlamp \
        	--values .cuebe/prod/components/headlamp/helm.headlamp.values.yaml \
        	--include-crds \
        	 \
        	 \
        	--atomic \
        	{{if not false}}--no-hooks{{end}} \
        	> .cuebe/prod/components/headlamp/helm.gen.yaml
    sources:
      - components/headlamp/*.cue
    generates:
      - .cuebe/prod/components/headlamp/helm.gen.yaml
  component:prod:headlamp:generator-1:
    cmds:
      - echo Exporting Resources
      - mkdir -p .cuebe/prod/components/headlamp
      - |-
        cue export ./components/headlamp -o text:.cuebe/prod/components/headlamp/resources.gen.yaml -f -e 'yaml.MarshalStream([
        		for artifact in holos.spec.artifacts
        		for generator in artifact.generators
        		if generator.kind == "Resources"
        		for _, resources in generator.resources
        		for _, resource in resources {
        			resource
        		}
        	])'
    sources:
      - components/headlamp/*.cue
    generates:
      - .cuebe/prod/components/headlamp/resources.gen.yaml
  component:prod:headlamp:transformer-0:
    cmds:
      - echo Kustomizing...
      - |-
        cat << EOF > .cuebe/prod/components/headlamp/kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        namespace: headlamp
        resources:
          - helm.gen.yaml
          - resources.gen.yaml

        EOF
      - kustomize build .cuebe/prod/components/headlamp > .cuebe/prod/components/headlamp/headlamp.gen.yaml
    deps:
      - component:prod:headlamp:generator-0
      - component:prod:headlamp:generator-1
    generates:
      - .cuebe/prod/components/headlamp/kustomization.yaml
      - .cuebe/prod/components/headlamp/headlamp.gen.yaml
    sources:
      - components/headlamp/*.cue
      - .cuebe/prod/components/headlamp/helm.gen.yaml
      - .cuebe/prod/components/headlamp/resources.gen.yaml
  component:prod:headlamp:validator-0:
    cmds:
      - echo Validating with kubeconform...
      - '{{ `kubeconform -schema-location default -schema-location https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json -schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}/{{.ResourceKind}}{{.KindSuffix}}.json -skip CustomResourceDefinition -summary .cuebe/prod/components/headlamp/headlamp.gen.yaml` }}'
    deps:
      - component:prod:headlamp:transformer-0
    sources:
      - components/headlamp/*.cue
      - .cuebe/prod/components/headlamp/headlamp.gen.yaml
  component:prod:headlamp:validator-1:
    cmds:
      - echo Validating with cue...
      - '{{ `cue vet -c ./config .cuebe/prod/components/headlamp/headlamp.gen.yaml` }}'
    deps:
      - component:prod:headlamp:transformer-0
    sources:
      - components/headlamp/*.cue
      - .cuebe/prod/components/headlamp/headlamp.gen.yaml
