name: Setup Homebrew
description: Installs Homebrew and dependencies listed in a local bundle.
inputs:
  github-token:
    required: true
    description: Github token to use when calling the API
runs:
  using: composite
  steps:
    - name: Check Latest Homebrew
      id: brew-version
      run: echo version=$(gh api repos/Homebrew/brew/releases -q '.[0].tag_name') >> "$GITHUB_OUTPUT"
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github-token }}

    - name: Cache Homebrew
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      id: cache-brew
      with:
        path: /home/linuxbrew/.linuxbrew
        key: Homebrew-${{ runner.os }}-${{ steps.brew-version.outputs.version }}

    - name: Install Homebrew
      if: steps.cache-brew.outputs.cache-hit != 'true'
      run: bash -c "CI=1 $(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      shell: bash

    - name: Setup Homebrew (pt 1)
      run: /home/linuxbrew/.linuxbrew/bin/brew shellenv --shell=bash | grep HOMEBREW_ | cut -d' ' -f2- | cut -d';' -f1 >> "$GITHUB_ENV"
      shell: bash

    - name: Setup Homebrew (pt 2)
      run: echo ${{ env.HOMEBREW_PREFIX }}/bin:${{ env.HOMEBREW_PREFIX }}/sbin >> "$GITHUB_PATH"
      shell: bash

    # Disabled for now: cache doesn't work with relative paths
    # - name: Cache Homebew Bundle
    #   uses: actions/cache@v4
    #   id: cache-bundle
    #   with:
    #     path: ${{ env.HOMEBREW_CELLAR }}
    #     key: Homebrew-${{ runner.os }}-${{ steps.brew-version.outputs.version }}-Bundle-${{ hashFiles('Brewfile') }}

    - name: Install Homebrew Bundle
      # if: steps.cache-bundle.outputs.cache-hit != 'true' #CACHE
      run: brew bundle install
      shell: bash

    # CACHE
    # - name: Link Homebrew Bundle
    #   if: steps.cache-bundle.outputs.cache-hit == 'true'
    #   run: brew bundle list | xargs brew link
    #   shell: bash
